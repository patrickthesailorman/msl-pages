---
  swagger: "2.0"
  info: 
    version: "0.0.1"
    title: "Million Songs API"
  host: "localhost:10010"
  basePath: "/"
  schemes: 
    - "http"
    - "https"
  consumes: 
    - "application/json"
  produces: 
    - "application/json"
  paths: 
    /ratings-edge/rateartist/{artistId}: 
      x-swagger-router-controller: "rating_controller"
      put: 
        description: "Update your rating of an artist."
        tags: 
          - "Rating"
        schemes: 
          - "https"
        security: 
          - 
            sessionToken: []
        consumes: 
          - "application/x-www-form-urlencoded"
        operationId: "rate_artist"
        parameters: 
          - 
            name: "artistId"
            in: "path"
            description: "Id for the artist that is being rated"
            required: true
            type: "string"
          - 
            name: "rating"
            in: "formData"
            description: "Value between 1-5 that represents the user's rating of the artist"
            required: true
            type: "integer"
        responses: 
          200: 
            description: "Successfully sent rating data to the server"
            schema: 
              $ref: "#/definitions/StatusResponse"
          404: 
            description: "Artist not found"
            schema: 
              $ref: "#/definitions/NotFoundResponse"
          500: 
            description: "Server Error"
            schema: 
              $ref: "#/definitions/ErrorResponse"
    /ratings-edge/ratealbum/{albumId}: 
      x-swagger-router-controller: "rating_controller"
      put: 
        description: "Update your rating of an album."
        tags: 
          - "Rating"
        schemes: 
          - "https"
        security: 
          - 
            sessionToken: []
        consumes: 
          - "application/x-www-form-urlencoded"
        operationId: "rate_album"
        parameters: 
          - 
            name: "albumId"
            in: "path"
            description: "Id for the album that is being rated"
            required: true
            type: "string"
          - 
            name: "rating"
            in: "formData"
            description: "Value between 1-5 that represents the user's rating of the album"
            required: true
            type: "integer"
        responses: 
          200: 
            description: "Successfully sent rating data to the server"
            schema: 
              $ref: "#/definitions/StatusResponse"
          404: 
            description: "Album not found"
            schema: 
              $ref: "#/definitions/NotFoundResponse"
          500: 
            description: "Server Error"
            schema: 
              $ref: "#/definitions/ErrorResponse"
    /ratings-edge/ratesong/{songId}: 
      x-swagger-router-controller: "rating_controller"
      put: 
        description: "Update your rating of a song."
        tags: 
          - "Rating"
        schemes: 
          - "https"
        security: 
          - 
            sessionToken: []
        consumes: 
          - "application/x-www-form-urlencoded"
        operationId: "rate_song"
        parameters: 
          - 
            name: "songId"
            in: "path"
            description: "Id for the song that is being rated"
            required: true
            type: "string"
          - 
            name: "rating"
            in: "formData"
            description: "Value between 1-5 that represents the user's rating of the song"
            required: true
            type: "integer"
        responses: 
          200: 
            description: "Successfully sent rating data to the server"
            schema: 
              $ref: "#/definitions/StatusResponse"
          404: 
            description: "Song not found"
            schema: 
              $ref: "#/definitions/NotFoundResponse"
          500: 
            description: "Server Error"
            schema: 
              $ref: "#/definitions/ErrorResponse"
  securityDefinitions: 
    sessionToken: 
      type: "apiKey"
      name: "sessionToken"
      in: "header"
  parameters: 
    Facets: 
      name: "facets"
      in: "query"
      description: "Comma delimited list of facet IDs to use as filters. If not provided, no filters will be applied."
      type: "string"
    Items: 
      name: "items"
      in: "query"
      description: "Number of items to return. Used for paginating results. The maximum is 100. If not provided, or falls outside the inclusive range 1-100, defaults to 25."
      type: "integer"
      required: true
    PagingState: 
      name: "pagingState"
      in: "query"
      description: "PagingState is used to retrieve the next page in a paginated query. A  PagingState instance contains a UUID key to an object in Cassandra on the server. The data within the object allows the server to retrieve the next page of data."
      required: false
      type: "string"
  definitions: 
    AlbumInfo: 
      properties: 
        album_id: 
          type: "string"
        album_name: 
          type: "string"
        artist_id: 
          type: "string"
        artist_mbid: 
          type: "string"
        artist_name: 
          type: "string"
        genre: 
          type: "string"
        year: 
          description: "The year the album was released"
          type: "integer"
        favorites_timestamp: 
          type: "string"
        average_rating: 
          type: "integer"
        personal_rating: 
          type: "integer"
        image_link: 
          type: "string"
        songs_list: 
          type: "array"
          items: 
            type: "string"
        in_my_library: 
          type: "boolean"
    ArtistInfo: 
      properties: 
        artist_id: 
          type: "string"
        artist_mbid: 
          type: "string"
        artist_name: 
          type: "string"
        albums_list: 
          type: "array"
          items: 
            type: "string"
        average_rating: 
          type: "integer"
        personal_rating: 
          type: "integer"
        favorites_timestamp: 
          type: "string"
        image_link: 
          type: "string"
        songs_list: 
          type: "array"
          items: 
            type: "string"
        genre: 
          type: "string"
        similar_artists_list: 
          type: "array"
          items: 
            type: "string"
        in_my_library: 
          type: "boolean"
    FacetInfo: 
      properties: 
        facet_id: 
          type: "string"
        name: 
          type: "string"
    FacetInfoWithChildren: 
      properties: 
        facet_id: 
          type: "string"
        name: 
          type: "string"
        children: 
          type: "array"
          items: 
            $ref: "#/definitions/FacetInfo"
    MyLibrary: 
      properties: 
        albums: 
          type: "array"
          items: 
            $ref: "#/definitions/AlbumInfo"
        artists: 
          type: "array"
          items: 
            $ref: "#/definitions/ArtistInfo"
        songs: 
          type: "array"
          items: 
            $ref: "#/definitions/SongInfo"
    PagingState: 
      properties: 
        pagingState: 
          description: "PagingState indicates a position in a paginated query. It is sent from the server with each paginated result and returned to the server to retrieve the next page. A PagingState instance contains a GUID key to an EVCache entry on the server. The value of the EVCache entry contains the original Cassandra query and the PagingState returned after execution of the Cassandra paginated query."
          type: "string"
    SongInfo: 
      properties: 
        song_id: 
          type: "string"
        song_name: 
          type: "string"
        image_link: 
          type: "string"
        artist_id: 
          type: "string"
        artist_mbid: 
          type: "string"
        artist_name: 
          type: "string"
        album_id: 
          type: "string"
        album_name: 
          type: "string"
        favorites_timestamp: 
          type: "string"
        duration: 
          description: "Length of song in seconds"
          type: "integer"
        genre: 
          type: "string"
        danceability: 
          type: "number"
        average_rating: 
          type: "integer"
        personal_rating: 
          type: "integer"
        song_hotttnesss: 
          description: "The Echo Nest hotttnesss score"
          type: "number"
        year: 
          description: "The year the song was released"
          type: "integer"
        in_my_library: 
          type: "boolean"
    UserInfo: 
      properties: 
        userId: 
          type: "string"
        name: 
          type: "string"
        email: 
          type: "string"
    AlbumList: 
      properties: 
        pagingState: 
          $ref: "#/definitions/PagingState"
        albums: 
          type: "array"
          items: 
            $ref: "#/definitions/AlbumInfo"
    ArtistList: 
      properties: 
        pagingState: 
          $ref: "#/definitions/PagingState"
        artists: 
          type: "array"
          items: 
            $ref: "#/definitions/ArtistInfo"
    SongList: 
      properties: 
        pagingState: 
          $ref: "#/definitions/PagingState"
        songs: 
          type: "array"
          items: 
            $ref: "#/definitions/SongInfo"
    ErrorResponse: 
      required: 
        - "message"
      properties: 
        message: 
          type: "string"
    LoginSuccessResponse: 
      properties: 
        authenticated: 
          type: "string"
    NotFoundResponse: 
      properties: 
        message: 
          type: "string"
    SearchResponse: 
      properties: 
        search_results: 
          type: "array"
          items: 
            type: "string"
    StatusResponse: 
      properties: 
        message: 
          type: "string"
