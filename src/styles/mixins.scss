
// ==========================================================================
// Mixins
// ==========================================================================

// pseudo-class
//
// Adds widely used pseudo class selectors to a given element, uses the Sass @content
// directive for adaptability.
//
// Passes your ruleset as a content block to the mixin as can be seen in the below
// example.
//
// ```
// a {
//   color: $white;
//   background: $black;
//
//   @include pseudo-class {
//      color: $white;
//      background: $black;
//	  }
// }
// ```
// Will output the following CSS.
//
// ```
// a {
//   color: #fff;
//   background: #000;
// }
//
// a:hover,
// a:focus,
// b:active,
// a.active,
// a.selected {
//   color: #fff;
//   background: #000;
// }
// ```
//
// Styleguide 5.1

@mixin pseudo-class {
  &:hover,
  &:focus,
  &:active,
  &.active,
  &.selected {
    @content;
  }
}


// Media Query Breakpoints
//
// Easy way to generate media queries.
//
// ```
// .my-div {
//   width: 100%;
//
//   @include breakpoint(480px) {
//      width: 50%;
//   }
//   @include breakpoint(479px, max) {
//      width: 60%;
//   }
// }
// ```
// Will output the following CSS.
//
// ```
// .my-div {
//   width: 100%;
// }
//
// @media screen and (min-width: 480px) {
//   .my-div {
//     width: 50%;
//   }
// }
//
// @media screen and (max-width: 479px) {
//   .my-div {
//     width: 60%;
//   }
// }
// ```
//
// Styleguide 5.2
@mixin breakpoint($bp, $direction: min) {
	@media screen and (#{$direction}-width: $bp)  {
		@content;
	}
}

// Standard Clearfix
//
// Clears an element with floated children.
//
// ```
// .my-div {
//   @include clearfix;
// }
// ```
//
// Styleguide 5.3
@mixin clearfix() {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}